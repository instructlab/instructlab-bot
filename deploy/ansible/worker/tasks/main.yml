---
- name: Set Redis binding IP address
  ansible.builtin.set_fact:
    redis_ip: "{{ hostvars[groups['botNode'][0]]['ansible_wg0']['ipv4']['address'] }}"
    cacheable: true
  when: redis_ip is not defined or
        redis_ip == ""

- name: Install git
  ansible.builtin.dnf:
    name: git
    state: present
  become: true

- name: Delete the existing instructlab-bot directory
  ansible.builtin.file:
    path: "~/instructlab-bot"
    state: absent

- name: Clone the repository  # noqa latest[git]
  ansible.builtin.git:
    repo: 'https://{{ github_token }}@github.com/instructlab/instructlab-bot'
    dest: "~/instructlab-bot"
    version: "main"

- name: Set default args for install-worker
  ansible.builtin.set_fact:
    worker_args: "--gpu-type cuda --github-token {{ github_token }} \
    --redis-ip {{ redis_ip }} \
    --nexodus-reg-key {{ nexodus_reg_key }} \
    --aws-access-key-id {{ aws_access_key_id }} \
    --aws-secret-access-key {{ aws_secret_access_key }}"

- name: Set args for taxonomy repo
  ansible.builtin.set_fact:
    worker_args: "{{ worker_args }} --taxonomy-repo {{ taxonomy_repo }}"
  when: taxonomy_repo is defined and
        taxonomy_repo != None and
        taxonomy_repo | trim != ''

- name: Set args for bot repo
  ansible.builtin.set_fact:
    worker_args: "{{ worker_args }} --bot-repo {{ bot_repo }}"
  when: bot_repo is defined and
        bot_repo != None and
        bot_repo | trim != ''

- name: Append args for precheck_endpoint_url
  ansible.builtin.set_fact:
    worker_args: "{{ worker_args }} --precheck-endpoint-url {{ precheck_endpoint_url }}"
  when: precheck_endpoint_url is defined and
        precheck_endpoint_url != None and
        precheck_endpoint_url | trim != ''

- name: Append api key arg for given precheck_endpoint
  ansible.builtin.set_fact:
    worker_args: "{{ worker_args }} --precheck-api-key {{ precheck_api_key }}"
  when: precheck_api_key is defined and
        precheck_api_key != None and
        precheck_api_key | trim != ''

- name: Set tls-insecure if enabled
  ansible.builtin.set_fact:
    worker_args: "{{ worker_args }} --tls-insecure \"true\""
  when: sdg_endpoint_url is defined and
        sdg_endpoint_url != None and
        sdg_endpoint_url | trim != '' and
        tls_insecure is defined and
        tls_insecure == "true" and
        tls_insecure | trim != ''

- name: Set certs for sdg_endpoint_url if provided
  ansible.builtin.set_fact:
    worker_args: "{{ worker_args }} --sdg-endpoint-url {{ sdg_endpoint_url }} \
    --tls-client-cert \"{{ tls_client_cert }}\" \
    --tls-client-key \"{{ tls_client_key }}\" \
    --tls-server-ca-cert \"{{ tls_server_ca_cert }}\""
  when: sdg_endpoint_url is defined and
        sdg_endpoint_url != None and
        sdg_endpoint_url | trim != ''

- name: Dump the args
  ansible.builtin.debug:
    msg: "{{ worker_args }}"

- name: Run the install script to setup worker and log output  # noqa no-changed-when
  ansible.builtin.shell: |
    cd ~/instructlab-bot/scripts
    nohup ./install-worker.sh install {{ worker_args }} > install-worker.log 2>&1 &


- name: Pause for 35 minutes to allow the script to complete
  ansible.builtin.pause:
    minutes: 35

- name: Print the output of the install script log  # noqa no-changed-when
  ansible.builtin.command: cat ~/instructlab-bot/scripts/install-worker.log
  register: log_content

- name: Display log content
  ansible.builtin.debug:
    msg: "{{ log_content.stdout }}"

- name: Reboot the system
  ansible.builtin.reboot:
  become: true
  when: reconfigure_worker is not defined or
        reconfigure_worker == "false"


- name: Wait for the system to come back
  ansible.builtin.wait_for_connection:
    delay: 60
    timeout: 500
  when: reconfigure_worker is not defined or
        reconfigure_worker == "false"

- name: Run the install script again to setup worker and log output  # noqa no-changed-when
  ansible.builtin.shell: |
    cd ~/instructlab-bot/scripts
    nohup ./install-worker.sh install {{ worker_args }} > install-worker.log 2>&1 &
  when: reconfigure_worker is not defined or
        reconfigure_worker == "false"

- name: Pause for 10 minutes to allow the script to complete
  ansible.builtin.pause:
    minutes: 10
  when: reconfigure_worker is not defined or
        reconfigure_worker == "false"
